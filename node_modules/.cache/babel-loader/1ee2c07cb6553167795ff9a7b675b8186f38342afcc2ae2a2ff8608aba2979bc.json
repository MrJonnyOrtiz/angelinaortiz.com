{"ast":null,"code":"var _jsxFileName = \"/Users/jonnyortiz/Google Drive/PERSONAL/angelinaortiz.com/src/components/Contact.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Contact() {\n  _s();\n  const [success, setSuccess] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [hasCaptchaToken, setHasCaptchaToken] = useState(false);\n  const SECRET_KEY = \"6LcLh9EnAAAAAJ24hz37Xr3hG4dTFgDCOfNJzs8_\";\n  const captchaRef = useRef(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formDataObj = Object.fromEntries(new FormData(e.target).entries());\n\n    // data validation\n    const fullNameRegX = /([A-Z]+([']|[\\.])?([A-Z,a-z,\\.]*))\\s(([A-Z]|['])+[A-Z,a-z]*)([-\\s](([A-Z]|['])+[A-Z,a-z]*)*)?/g;\n    if (fullNameRegX.test(formDataObj.name)) {\n      // setError(\"\");\n      if (formDataObj.message.length > 3) {\n        // setError(\"\");\n        if (hasCaptchaToken) {\n          const token = captchaRef.current.getValue(); // returns token from ReCaptcha component\n\n          captchaRef.current.reset();\n          const raw = JSON.stringify({\n            ...formDataObj,\n            \"g-recaptcha-response\": token\n          });\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: raw\n          };\n          try {\n            // Contact test API\n            const response = await fetch(\"https://ydvvjbdup4.execute-api.us-east-1.amazonaws.com/Prod\", options);\n            if (response.ok) {\n              // show success message\n              setSuccess(\"Your message was sent!\");\n              setError(\"\");\n\n              // reset form\n              setFullName(\"\");\n              setEmail(\"\");\n              setMessage(\"\");\n              setHasCaptchaToken(false);\n\n              // const data = await response.json(); // the data is a message Id string, good for nothing\n            } else {\n              // show error message\n              setError(\"Sorry, something went wrong trying to send your message. The administrator has been informed. Please try again at a later time.\");\n              console.log(response);\n            }\n          } catch (error) {\n            setError(\"Sorry, something went wrong trying to send your message. The administrator has been informed. Please try again at a later time.\");\n          }\n        } else {\n          // the recaptcha was not checked\n          setError(\"Please check the recaptcha box.\");\n        }\n      } else {\n        setError(\"Please enter a valid message.\");\n      }\n    } else {\n      setError(\"Please enter a valid full name.\");\n    }\n  };\n  function handleOnChange(value) {\n    setHasCaptchaToken(true);\n    setError(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"contact\",\n    className: \"grid grid-cols-1 content-start justify-items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"px-5\",\n        id: \"contact-us-form\",\n        onSubmit: handleSubmit,\n        children: [success.length > 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-green-500 text-center font-bold mb-5\",\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }, this), error.length > 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-red-500 text-center font-bold mb-5\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          className: \"block my-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"block text-sm font-medium\",\n            children: \"Your Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"text-black pl-3\",\n            id: \"name\",\n            name: \"name\",\n            autoComplete: \"name\",\n            value: fullName,\n            onChange: e => setFullName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block my-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"block text-sm font-medium\",\n            children: \"Your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"peer text-black pl-3 pr-9\",\n            name: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"emailHelp\",\n            className: \"text-xs italic\",\n            children: \"We'll never share your email with anyone else.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 invisible peer-invalid:visible text-pink-600 text-sm\",\n            children: \"Please provide a valid email address.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          className: \"my-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"block text-sm font-medium\",\n            children: \"Your message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"text-black pl-3 pr-12\",\n            id: \"message\",\n            name: \"message\",\n            rows: \"4\",\n            value: message,\n            onChange: e => setMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"my-3\",\n          children: /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n            sitekey: SECRET_KEY,\n            ref: captchaRef,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-24\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            id: \"submitBtn\",\n            className: \"rounded bg-white text-black font-bold py-2 px-4 my-3 hover:text-white hover:bg-gray-700 animate-pulse\",\n            hidden: !hasCaptchaToken ? \"hidden\" : \"\",\n            children: \"Send Message!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 7\n  }, this);\n}\n_s(Contact, \"xrMz7qShPJ1K972Wj4Flb6Ye2GU=\");\n_c = Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["useState","useRef","ReCAPTCHA","jsxDEV","_jsxDEV","Contact","_s","success","setSuccess","error","setError","fullName","setFullName","email","setEmail","message","setMessage","hasCaptchaToken","setHasCaptchaToken","SECRET_KEY","captchaRef","handleSubmit","e","preventDefault","formDataObj","Object","fromEntries","FormData","target","entries","fullNameRegX","test","name","length","token","current","getValue","reset","raw","JSON","stringify","options","method","headers","body","response","fetch","ok","console","log","handleOnChange","value","id","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","autoComplete","onChange","rows","sitekey","ref","hidden","_c","$RefreshReg$"],"sources":["/Users/jonnyortiz/Google Drive/PERSONAL/angelinaortiz.com/src/components/Contact.js"],"sourcesContent":["import { useState, useRef } from \"react\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nexport default function Contact() {\n   const [success, setSuccess] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [fullName, setFullName] = useState(\"\");\n   const [email, setEmail] = useState(\"\");\n   const [message, setMessage] = useState(\"\");\n   const [hasCaptchaToken, setHasCaptchaToken] = useState(false);\n\n   const SECRET_KEY = \"6LcLh9EnAAAAAJ24hz37Xr3hG4dTFgDCOfNJzs8_\";\n\n   const captchaRef = useRef(null);\n\n   const handleSubmit = async (e) => {\n      e.preventDefault();\n\n      const formDataObj = Object.fromEntries(new FormData(e.target).entries());\n\n      // data validation\n      const fullNameRegX =\n         /([A-Z]+([']|[\\.])?([A-Z,a-z,\\.]*))\\s(([A-Z]|['])+[A-Z,a-z]*)([-\\s](([A-Z]|['])+[A-Z,a-z]*)*)?/g;\n\n      if (fullNameRegX.test(formDataObj.name)) {\n         // setError(\"\");\n         if (formDataObj.message.length > 3) {\n            // setError(\"\");\n            if (hasCaptchaToken) {\n               const token = captchaRef.current.getValue(); // returns token from ReCaptcha component\n\n               captchaRef.current.reset();\n\n               const raw = JSON.stringify({\n                  ...formDataObj,\n                  \"g-recaptcha-response\": token,\n               });\n\n               const options = {\n                  method: \"POST\",\n                  headers: {\n                     \"Content-Type\": \"application/json\",\n                  },\n                  body: raw,\n               };\n\n               try {\n                  // Contact test API\n                  const response = await fetch(\n                     \"https://ydvvjbdup4.execute-api.us-east-1.amazonaws.com/Prod\",\n                     options\n                  );\n\n                  if (response.ok) {\n                     // show success message\n                     setSuccess(\"Your message was sent!\");\n                     setError(\"\");\n\n                     // reset form\n                     setFullName(\"\");\n                     setEmail(\"\");\n                     setMessage(\"\");\n                     setHasCaptchaToken(false);\n\n                     // const data = await response.json(); // the data is a message Id string, good for nothing\n                  } else {\n                     // show error message\n                     setError(\n                        \"Sorry, something went wrong trying to send your message. The administrator has been informed. Please try again at a later time.\"\n                     );\n                     console.log(response);\n                  }\n               } catch (error) {\n                  setError(\n                     \"Sorry, something went wrong trying to send your message. The administrator has been informed. Please try again at a later time.\"\n                  );\n               }\n            } else {\n               // the recaptcha was not checked\n               setError(\"Please check the recaptcha box.\");\n            }\n         } else {\n            setError(\"Please enter a valid message.\");\n         }\n      } else {\n         setError(\"Please enter a valid full name.\");\n      }\n   };\n\n   function handleOnChange(value) {\n      setHasCaptchaToken(true);\n      setError(\"\");\n   }\n\n   return (\n      <div\n         id=\"contact\"\n         className=\"grid grid-cols-1 content-start justify-items-center\"\n      >\n         <div className=\"\">\n            {/* <!-- Contact form --> */}\n            <form className=\"px-5\" id=\"contact-us-form\" onSubmit={handleSubmit}>\n               {success.length > 0 && (\n                  <h3 className=\"text-green-500 text-center font-bold mb-5\">\n                     {success}\n                  </h3>\n               )}\n               {error.length > 0 && (\n                  <h3 className=\"text-red-500 text-center font-bold mb-5\">\n                     {error}\n                  </h3>\n               )}\n\n               <label htmlFor=\"name\" className=\"block my-3\">\n                  <span className=\"block text-sm font-medium\">\n                     Your Full Name\n                  </span>\n                  <input\n                     type=\"text\"\n                     className=\"text-black pl-3\"\n                     id=\"name\"\n                     name=\"name\"\n                     autoComplete=\"name\"\n                     value={fullName}\n                     onChange={(e) => setFullName(e.target.value)}\n                  />\n               </label>\n               <label className=\"block my-3\">\n                  <span className=\"block text-sm font-medium\">Your Email</span>\n                  <input\n                     type=\"email\"\n                     className=\"peer text-black pl-3 pr-9\"\n                     name=\"email\"\n                     id=\"email\"\n                     value={email}\n                     onChange={(e) => setEmail(e.target.value)}\n                  />\n                  <p id=\"emailHelp\" className=\"text-xs italic\">\n                     We'll never share your email with anyone else.\n                  </p>\n                  <p className=\"mt-2 invisible peer-invalid:visible text-pink-600 text-sm\">\n                     Please provide a valid email address.\n                  </p>\n               </label>\n               <label htmlFor=\"message\" className=\"my-3\">\n                  <span className=\"block text-sm font-medium\">\n                     Your message\n                  </span>\n                  <textarea\n                     className=\"text-black pl-3 pr-12\"\n                     id=\"message\"\n                     name=\"message\"\n                     rows=\"4\"\n                     value={message}\n                     onChange={(e) => setMessage(e.target.value)}\n                  ></textarea>\n               </label>\n               <div className=\"my-3\">\n                  <ReCAPTCHA\n                     sitekey={SECRET_KEY}\n                     ref={captchaRef}\n                     onChange={handleOnChange}\n                  />\n               </div>\n               <div className=\"mb-24\">\n                  <button\n                     type=\"submit\"\n                     id=\"submitBtn\"\n                     className=\"rounded bg-white text-black font-bold py-2 px-4 my-3 hover:text-white hover:bg-gray-700 animate-pulse\"\n                     hidden={!hasCaptchaToken ? \"hidden\" : \"\"}\n                  >\n                     Send Message!\n                  </button>\n               </div>\n            </form>\n         </div>\n      </div>\n   );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}